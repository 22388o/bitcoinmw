// Copyright (c) 2023-2024, The BitcoinMW Developers
// Some code and concepts from:
// * Grin: https://github.com/mimblewimble/grin
// * Arti: https://gitlab.torproject.org/tpo/core/arti
// * BitcoinMW: https://github.com/bitcoinmw/bitcoinmw
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//! # The BitcoinMW base crate
//! The base crate defines two key traits, [`crate::Configurable`] and [`crate::Serializable`], whose implementations
//! can be automatically generated by the proc macros Configurable and Serializable, respectively.
//! For detailed examples, refer to the derive crate. Additionally, this crate includes several other
//! data types required by the derive crate. It also encompasses [`crate::Error`] and various core error-related
//! structures, alongside essential macros utilized in BitcoinMW. The primary objective of this crate is to
//! house all necessary components for implementing the derive proc macros utilized within BitcoinMW.

use bmw_deps::failure;

mod error;
mod functions;
mod macros;
mod public;
mod ser;
mod test;

pub use crate::public::*;
