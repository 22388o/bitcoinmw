(function() {var implementors = {
"bmw_evh":[["impl Serializable for <a class=\"struct\" href=\"bmw_evh/struct.WriteState.html\" title=\"struct bmw_evh::WriteState\">WriteState</a>"]],
"bmw_ser":[],
"bmw_util":[["impl&lt;S: Serializable + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&gt; Serializable for <a class=\"struct\" href=\"bmw_util/struct.ArrayList.html\" title=\"struct bmw_util::ArrayList\">ArrayList</a>&lt;S&gt;"],["impl&lt;S: Serializable + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; Serializable for <a class=\"struct\" href=\"bmw_util/struct.Array.html\" title=\"struct bmw_util::Array\">Array</a>&lt;S&gt;"],["impl Serializable for <a class=\"struct\" href=\"bmw_util/struct.HashtableConfig.html\" title=\"struct bmw_util::HashtableConfig\">HashtableConfig</a>"],["impl Serializable for <a class=\"struct\" href=\"bmw_util/struct.HashsetConfig.html\" title=\"struct bmw_util::HashsetConfig\">HashsetConfig</a>"],["impl Serializable for <a class=\"struct\" href=\"bmw_util/struct.ListConfig.html\" title=\"struct bmw_util::ListConfig\">ListConfig</a>"],["impl Serializable for <a class=\"struct\" href=\"bmw_util/struct.Pattern.html\" title=\"struct bmw_util::Pattern\">Pattern</a>"],["impl Serializable for <a class=\"struct\" href=\"bmw_util/struct.SlabAllocatorConfig.html\" title=\"struct bmw_util::SlabAllocatorConfig\">SlabAllocatorConfig</a>"],["impl Serializable for <a class=\"struct\" href=\"bmw_util/struct.ThreadPoolConfig.html\" title=\"struct bmw_util::ThreadPoolConfig\">ThreadPoolConfig</a>"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()