(function() {var implementors = {
"bmw_evh":[["impl Serializable for <a class=\"struct\" href=\"bmw_evh/struct.WriteState.html\" title=\"struct bmw_evh::WriteState\">WriteState</a>"]],
"bmw_ser":[],
"bmw_util":[["impl Serializable for <a class=\"struct\" href=\"bmw_util/struct.Pattern.html\" title=\"struct bmw_util::Pattern\">Pattern</a>"],["impl&lt;S: Serializable + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; Serializable for <a class=\"struct\" href=\"bmw_util/struct.Array.html\" title=\"struct bmw_util::Array\">Array</a>&lt;S&gt;"],["impl&lt;S: Serializable + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + 'static&gt; Serializable for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bmw_util/trait.SortableList.html\" title=\"trait bmw_util::SortableList\">SortableList</a>&lt;S&gt;&gt;"],["impl Serializable for <a class=\"struct\" href=\"bmw_util/struct.SlabAllocatorConfig.html\" title=\"struct bmw_util::SlabAllocatorConfig\">SlabAllocatorConfig</a>"],["impl&lt;K, V&gt; Serializable for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bmw_util/trait.Hashtable.html\" title=\"trait bmw_util::Hashtable\">Hashtable</a>&lt;K, V&gt;&gt;<div class=\"where\">where\n    K: Serializable + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + 'static,\n    V: Serializable + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div>"],["impl&lt;K&gt; Serializable for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bmw_util/trait.Hashset.html\" title=\"trait bmw_util::Hashset\">Hashset</a>&lt;K&gt;&gt;<div class=\"where\">where\n    K: Serializable + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + 'static,</div>"],["impl&lt;S: Serializable + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&gt; Serializable for <a class=\"struct\" href=\"bmw_util/struct.ArrayList.html\" title=\"struct bmw_util::ArrayList\">ArrayList</a>&lt;S&gt;"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()